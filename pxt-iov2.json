{"README.md":"# pxt-ioV2\r\nMakeCode extension for iːoV2 boards for the micro:bit.\r\nhttps://eureka.niigata.jp\r\n\r\n## License\r\nMIT\r\n\r\n## Supported targets\r\n\r\nfor PXT/microbit","_locales/ja/pxt-iov2-jsdoc-strings.json":"{}","_locales/ja/pxt-iov2-strings.json":"{\n  \"ioV2.BT.darker|block\": \"暗い\",\n  \"ioV2.BT.lighter|block\": \"明るい\",\n  \"ioV2.IO_humanDetection|block\": \"人が動いた\",\n  \"ioV2.IO_human_DISP|block\": \"人感センサーの値を表示する\",\n  \"ioV2.IO_human|block\": \"人感センサーの値\",\n  \"ioV2.IO_relay_2|block\": \"リレー(アナログ)|%syuturyoku|\",\n  \"ioV2.IO_relay|block\": \"リレー(デジタル)|%mode|\",\n  \"ioV2.driveForwards|block\": \"待ち時間 |%second|(秒)\",\n  \"ioV2.eureka_tempDS|block\": \"DS18B20温度センサ\",\n  \"ioV2.microbit2_decideLight|block\": \"明るさｾﾝｻが |%limit| 値より |%brightness|\",\n  \"ioV2.microbit2_denkiLED|block\": \"明るさセンサーの値を表示する\",\n  \"ioV2.microbit2_denkitemp|block\": \"明るさセンサー値\",\n  \"ioV2.neopixel_Brightness_block|block\": \"LEDの明るさを|%neo_Brightness|にする \",\n  \"ioV2.neopixel_blue_block|block\": \"青信号 |%mode|\",\n  \"ioV2.neopixel_erace_block|block\": \"LEDを消す\",\n  \"ioV2.neopixel_rainbow|block\": \"にじ色\",\n  \"ioV2.neopixel_red_block|block\": \"赤信号 |%mode|\",\n  \"ioV2.neopixel_select_block|block\": \"|%neo_number|個のLEDを $color 色でつける\",\n  \"ioV2.neopixel_set_block|block\": \"|%neo_number|番目のLEDを $color 色でつける\",\n  \"ioV2.neopixel_white_block|block\": \"白色ライト|%mode|,明るさ|%BR|\",\n  \"ioV2.neopixel_yellow_block|block\": \"黄信号 |%mode|\",\n  \"{id:category}IoV2\": \"イーオ V2\",\n  \"{id:group}1 i:o Neopixel\": \"1 フルカラーLED\",\n  \"{id:group}2 i:o Human detecting sensor\":  \"2 人感センサー\",\n  \"{id:group}3 micro:bit light sensor\": \"3 ﾏｲｸﾛﾋﾞｯﾄの明るさｾﾝｻｰ\",\n  \"{id:group}4 Relay control\": \"4 リレー(スイッチ)コントロール\"\n}","eurekaV2.ts":"/* i-o V2  20230107 */\r\n\r\nenum onoff {\r\n    ON,\r\n    OFF,\r\n}\r\n\r\nlet io_neo = neopixel.create(DigitalPin.P9, 3, NeoPixelMode.RGB);\r\nio_neo.setBrightness(15)\r\n\r\nfor (let n = 0; n < 3; n++) {\r\n    io_neo.setPixelColor(n, neopixel.colors(NeoPixelColors.Black))\r\n}\r\nio_neo.show()\r\n\r\n\r\n//% color=\"#ff4500\" weight=94 \r\nnamespace ioV2 {\r\n\r\n    export enum BT {\r\n        //% block=\"lighter\"\r\n        lighter,\r\n        //% block=\"darker\"\r\n        darker\r\n    }\r\n\r\n    //% color=\"#1E90FF\" weight=93 block=\"Wait time (sec)|%second|\" group=\"1 i:o Neopixel\"\r\n    //% second.min=0 second.max=10 second.defl=1\r\n    export function driveForwards(second: number): void {\r\n        basic.pause(second * 1000);\r\n    }\r\n\r\n    //% color=\"#4741f1\" weight=89 blockId=neopixel_blue block=\"Traffic light blue|%mode|\" group=\"1 i:o Neopixel\"\r\n    export function neopixel_blue_block(mode: onoff) {\r\n        switch (mode) {\r\n            case onoff.ON:\r\n                io_neo.setPixelColor(0, neopixel.colors(NeoPixelColors.Blue))\r\n                io_neo.show()\r\n                basic.pause(10);\r\n                break;\r\n\r\n            case onoff.OFF:\r\n                io_neo.setPixelColor(0, neopixel.colors(NeoPixelColors.Black))\r\n                io_neo.show()\r\n                basic.pause(10);\r\n                break;\r\n        }\r\n    }\r\n\r\n    //% color=\"#ffa800\" weight=86 blockId=neopixel_yellow block=\"Traffic light yellow|%mode|\" group=\"1 i:o Neopixel\"\r\n    export function neopixel_yellow_block(mode: onoff) {\r\n        switch (mode) {\r\n            case onoff.ON:\r\n                io_neo.setPixelColor(1, neopixel.colors(NeoPixelColors.Yellow))\r\n                io_neo.show()\r\n                basic.pause(10);\r\n                break;\r\n\r\n            case onoff.OFF:\r\n                io_neo.setPixelColor(1, neopixel.colors(NeoPixelColors.Black))\r\n                io_neo.show()\r\n                basic.pause(10);\r\n                break;\r\n        }\r\n    }\r\n\r\n    //% color=\"#ff4940\" weight=84 blockId=neopixel_red block=\"Traffic light red|%mode|\" group=\"1 i:o Neopixel\"\r\n    export function neopixel_red_block(mode: onoff) {\r\n        switch (mode) {\r\n            case onoff.ON:\r\n                io_neo.setPixelColor(2, neopixel.colors(NeoPixelColors.Red))\r\n                io_neo.show()\r\n                basic.pause(10);\r\n                break;\r\n\r\n            case onoff.OFF:\r\n                io_neo.setPixelColor(2, neopixel.colors(NeoPixelColors.Black))\r\n                io_neo.show()\r\n                basic.pause(10);\r\n                break;\r\n        }\r\n    }\r\n\r\n    //% color=\"#808080\" weight=82 blockId=neopixel_white block=\"white light |%mode|,Brightness|%BR|\" group=\"1 i:o Neopixel\"\r\n    //% BR.min=0 BR.max=255 BR.defl=15\r\n    export function neopixel_white_block(mode: onoff, BR: number) {\r\n\r\n        switch (mode) {\r\n            case onoff.ON:\r\n                io_neo.setBrightness(BR)\r\n                for (let n = 0; n < 3; n++) {\r\n                    io_neo.setPixelColor(n, neopixel.colors(NeoPixelColors.White))\r\n                }\r\n                io_neo.show()\r\n                break;\r\n\r\n            case onoff.OFF:\r\n                io_neo.setPixelColor(2, neopixel.colors(NeoPixelColors.Black))\r\n                io_neo.show()\r\n                break;\r\n        }\r\n    }\r\n\r\n    //% color=\"#000000\" weight=80 blockId=neopixel_erace block=\"Color LED(s) off\" group=\"1 i:o Neopixel\"\r\n    export function neopixel_erace_block() {\r\n        for (let n = 0; n < 3; n++) {\r\n            io_neo.setPixelColor(n, neopixel.colors(NeoPixelColors.Black))\r\n        }\r\n        io_neo.show()\r\n    }\r\n\r\n    //% color=\"#708090\" weight=78 blockId=neopixel_Brightness block=\"Color LED(s) Brightness|%neo_Brightness| \" group=\"1 i:o Neopixel\"\r\n    //% neo_Brightness.min=0 neo_Brightness.max=255 neo_Brightness.defl=15\r\n    export function neopixel_Brightness_block(neo_Brightness: number) {\r\n        io_neo.setBrightness(neo_Brightness)\r\n    }\r\n\r\n    //% color.shadow=\"colorNumberPicker\"\r\n    //% color=\"#708090\" weight=76 blockId=neopixel_set block=\"No.|%neo_number|LED ON  color $color\" group=\"1 i:o Neopixel\"\r\n    //% neo_number.min=0 neo_number.max=2 neo_number.defl=0\r\n    export function neopixel_set_block(neo_number: number, color: number) {\r\n        io_neo.setPixelColor(neo_number, color)\r\n        io_neo.show()\r\n    }\r\n\r\n\r\n    //% color.shadow=\"colorNumberPicker\"\r\n    //% color=\"#708090\" weight=74 blockId=neopixel_select block=\"|%neo_number|LED(s) ON   color $color\" group=\"1 i:o Neopixel\"\r\n    //% neo_number.min=0 neo_number.max=3 neo_number.defl=3\r\n    export function neopixel_select_block(neo_number: number, color: number) {\r\n        for (let n = 0; n < 3; n++) {\r\n            io_neo.setPixelColor(n, neopixel.colors(NeoPixelColors.Black))\r\n        }\r\n        io_neo.show()\r\n        for (let n = 0; n < neo_number; n++) {\r\n            io_neo.setPixelColor(n, color)\r\n        }\r\n        io_neo.show()\r\n\r\n    }\r\n\r\n    //% color=\"#708090\" weight=72 blockId=neopixel_reinbow block=\"RGB on\" group=\"1 i:o Neopixel\"\r\n    export function neopixel_rainbow() {\r\n        io_neo.showRainbow(1, 180)\r\n    }\r\n\r\n    //% color=\"#a0522d\" weight=36 block=\"Human in motion\" group=\"2 i:o Human detecting sensor\"\r\n    export function IO_humanDetection(): boolean {\r\n        pins.setPull(DigitalPin.P14, PinPullMode.PullNone);\r\n        if (pins.digitalReadPin(DigitalPin.P14) == 1) {\r\n            return true;\r\n        } else {\r\n            return false;\r\n        }\r\n    }\r\n\r\n    //% color=\"#a0522d\" weight=34 blockId=IO_human block=\"human detecting sensor binary\" group=\"2 i:o Human detecting sensor\"\r\n    export function IO_human(): number {\r\n        pins.setPull(DigitalPin.P14, PinPullMode.PullNone);\r\n        return pins.digitalReadPin(DigitalPin.P14);\r\n    }\r\n\r\n    //% color=\"#a0522d\"  weight=79 blockId=IO_human_DISP block=\"Show human detecting sensor binary\" group=\"2 i:o Human detecting sensor\"\r\n    export function IO_human_DISP() {\r\n        pins.setPull(DigitalPin.P14, PinPullMode.PullNone);\r\n        basic.showNumber(pins.digitalReadPin(DigitalPin.P14));\r\n    }\r\n\r\n    //% color=\"#009A00\"  weight=81 blockId=microbit2_decideLight block=\"Light sensor value (than|%limit|) |%brightness| \" group=\"3 micro:bit light sensor\"\r\n    //% limit.min=0 limit.max=100\r\n    export function microbit2_decideLight( limit: number,Brightness: BT): boolean {\r\n        switch (Brightness) {\r\n            case BT.darker:\r\n                if (input.lightLevel() / 254 * 100 <= limit) {\r\n                    return true;\r\n                } else {\r\n                    return false;\r\n                }\r\n            case BT.lighter:\r\n                if (input.lightLevel() / 254 * 100 < limit) {\r\n                    return false;\r\n                } else {\r\n                    return true;\r\n                }\r\n        }\r\n    }\r\n\r\n\r\n\r\n    //% color=\"#009A00\"  weight=80 blockId=microbit2_denkitemp block=\"Light sensor value\" group=\"3 micro:bit light sensor\"\r\n    export function microbit2_denkitemp(): number {\r\n        return Math.round(input.lightLevel() / 254 * 100);\r\n    }\r\n\r\n\r\n    //% color=\"#228b22\"  weight=82 blockId=microbit2_denkiLED block=\"Show light sensor values\" group=\"3 micro:bit light sensor\"\r\n    export function microbit2_denkiLED() {\r\n        basic.showNumber(Math.round(input.lightLevel() / 254 * 100));\r\n    }\r\n\r\n\r\n    //% color=\"#4682b4\" weight=58 blockId=IO_relay block=\"Relay (digital) write|%mode|\" group=\"4 Relay control\"\r\n    export function IO_relay(mode: onoff) {\r\n        switch (mode) {\r\n            case onoff.ON: {\r\n                return pins.digitalWritePin(DigitalPin.P8, 1);\r\n            }\r\n            case onoff.OFF: {\r\n                return pins.digitalWritePin(DigitalPin.P8, 0);\r\n            }\r\n        }\r\n    }\r\n\r\n    //% color=\"#4682b4\" weight=56 blockId=IO_relay_2 block=\"Relay (analog) write|%syuturyoku|\" group=\"4 Relay control\"\r\n    //% syuturyoku.min=0 syuturyoku.max=1023 syuturyoku.defl=1023\r\n    export function IO_relay_2(syuturyoku: number) {\r\n        return pins.analogWritePin(AnalogPin.P8, syuturyoku);\r\n    }\r\n    \r\n    //% color=\"#ff7b00\" weight=32 blockId=eureka_tempDS block=\"DS18B20 Temp\" group=\"5 Temp sensor\"\r\n    //% advanced=true\r\n    export function eureka_tempDS(): number {\r\n        return Math.round(dstemp.celsius(DigitalPin.P0) * 10) / 10\r\n    }\r\n}","main.blocks":"<xml xmlns=\"https://developers.google.com/blockly/xml\"><block type=\"pxt-on-start\" id=\"/+T@9q_M]+yxY+rkjP.v\" x=\"64\" y=\"10\"></block><block type=\"device_forever\" id=\"]AL@*pUa(wfl|5kNDxpV\" x=\"256\" y=\"8\"></block></xml>","main.ts":"basic.forever(function () {\r\n\t\r\n})\r\n","pxt.json":"{\n    \"name\": \"pxt-iov2\",\n    \"version\": \"0.0.0\",\n    \"description\": \"\",\n    \"dependencies\": {\n        \"core\": \"*\",\n        \"radio\": \"*\",\n        \"microphone\": \"*\",\n        \"neopixel\": \"github:microsoft/pxt-neopixel#v0.7.5\",\n        \"microbit-dstemp\": \"github:itibanbosi/microbit-dstemp#v0.1.21\"\n    },\n    \"files\": [\n        \"README.md\",\n        \"main.blocks\",\n        \"main.ts\",\n        \"eurekaV2.ts\",\n        \"_locales/ja/pxt-iov2-jsdoc-strings.json\",\n        \"_locales/ja/pxt-iov2-strings.json\"\n    ],\n    \"testFiles\": [\n        \"test.ts\"\n    ],\n    \"public\": true,\n    \"targetVersions\": {\n        \"target\": \"4.0.24\",\n        \"targetId\": \"microbit\"\n    },\n    \"supportedTargets\": [\n        \"microbit\"\n    ],\n    \"preferredEditor\": \"blocksprj\"\n}\n","test.ts":"// テストはここに来ます。このパッケージが拡張機能として使用されるときにはコンパイルされません。\r\n"}